{"ast":null,"code":"var _jsxFileName = \"/home/onemorebottlee/Desktop/nomadCoder/react-master/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport Apexchart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart(_ref) {\n  _s();\n\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading...\" : /*#__PURE__*/_jsxDEV(Apexchart, {\n      type: \"line\",\n      series: [{\n        name: \"helo\",\n        data: [1, 2, 3, 4, 5]\n      }, {\n        name: \"hi\",\n        data: [3, 5, 6, 7, 55]\n      }],\n      options: {\n        chart: {\n          height: 500,\n          width: 500\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 42\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","Apexchart","Chart","coinId","isLoading","data","name","chart","height","width"],"sources":["/home/onemorebottlee/Desktop/nomadCoder/react-master/src/routes/Chart.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport Apexchart from \"react-apexcharts\"\n\ninterface IHistoricalData {\n    time_open: string;\n    time_close: string;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    volume: number;\n    market_cap: number;\n}\ninterface ChartProps {\n    coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n    const { isLoading, data } = useQuery<IHistoricalData[]>([\"ohlcv\", coinId], () => fetchCoinHistory(coinId))\n    return (\n        <div>{isLoading ? \"Loading...\" : <Apexchart type=\"line\" series={[{ name: \"helo\", data: [1, 2, 3, 4, 5] }, { name: \"hi\", data: [3, 5, 6, 7, 55] }]} options={{ chart: { height: 500, width: 500 } }} />}</div>\n    )\n}\n\nexport default Chart;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,QAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;;AAeA,SAASC,KAAT,OAAuC;EAAA;;EAAA,IAAxB;IAAEC;EAAF,CAAwB;EACnC,MAAM;IAAEC,SAAF;IAAaC;EAAb,IAAsBN,QAAQ,CAAoB,CAAC,OAAD,EAAUI,MAAV,CAApB,EAAuC,MAAMH,gBAAgB,CAACG,MAAD,CAA7D,CAApC;EACA,oBACI;IAAA,UAAMC,SAAS,GAAG,YAAH,gBAAkB,QAAC,SAAD;MAAW,IAAI,EAAC,MAAhB;MAAuB,MAAM,EAAE,CAAC;QAAEE,IAAI,EAAE,MAAR;QAAgBD,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb;MAAtB,CAAD,EAA0C;QAAEC,IAAI,EAAE,IAAR;QAAcD,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb;MAApB,CAA1C,CAA/B;MAAkH,OAAO,EAAE;QAAEE,KAAK,EAAE;UAAEC,MAAM,EAAE,GAAV;UAAeC,KAAK,EAAE;QAAtB;MAAT;IAA3H;MAAA;MAAA;MAAA;IAAA;EAAjC;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH;;GALQP,K;UACuBH,Q;;;KADvBG,K;AAOT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}