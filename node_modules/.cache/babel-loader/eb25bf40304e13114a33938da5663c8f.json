{"ast":null,"code":"import{useQuery}from\"react-query\";import{fetchCoinHistory}from\"../api\";import Apexchart from\"react-apexcharts\";import{useRecoilValue}from\"recoil\";import{isDarkAtom}from\"../atoms\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Chart(_ref){var _data$map;var coinId=_ref.coinId;var isDark=useRecoilValue(isDarkAtom);var _useQuery=useQuery([\"ohlcv\",coinId],function(){return fetchCoinHistory(coinId);}),isLoading=_useQuery.isLoading,data=_useQuery.data;return/*#__PURE__*/_jsx(\"div\",{children:isLoading?\"Loading...\":/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Apexchart,{type:\"line\",series:[{name:\"price\",data:(_data$map=data===null||data===void 0?void 0:data.map(function(price){return price.close;}))!==null&&_data$map!==void 0?_data$map:[]}],options:{theme:{mode:isDark?\"dark\":\"light\"},chart:{height:300,width:500,toolbar:{show:false},background:\"#2c3e50\"},stroke:{curve:\"smooth\",width:5},yaxis:{show:false},xaxis:{labels:{show:false},axisTicks:{show:false},axisBorder:{show:false},type:\"datetime\",categories:data===null||data===void 0?void 0:data.map(function(price){return new Date(price.time_close*1000).toISOString();})},fill:{type:\"gradient\",gradient:{gradientToColors:[\"#0be881\"],stops:[0,100]}},colors:[\"#0fbcf9\"],tooltip:{y:{formatter:function formatter(value){return\"$ \".concat(value.toFixed(2));}}}}}),/*#__PURE__*/_jsx(Apexchart,{type:\"candlestick\",series:[{name:\"price\",data:data===null||data===void 0?void 0:data.map(function(price){return{x:new Date(price.time_open*1000),y:[price.open,price.high,price.low,price.close]};})}],options:{theme:{mode:isDark?\"dark\":\"light\"},chart:{height:300,width:500,toolbar:{show:false},background:\"#2c3e50\"},stroke:{curve:\"smooth\",width:5},yaxis:{show:false},xaxis:{labels:{show:false},axisTicks:{show:false},axisBorder:{show:false},type:\"datetime\",categories:data===null||data===void 0?void 0:data.map(function(price){return new Date(price.time_close*1000).toISOString();})},colors:[\"#0fbcf9\"]}})]})});}export default Chart;","map":{"version":3,"names":["useQuery","fetchCoinHistory","Apexchart","useRecoilValue","isDarkAtom","Chart","coinId","isDark","isLoading","data","name","map","price","close","theme","mode","chart","height","width","toolbar","show","background","stroke","curve","yaxis","xaxis","labels","axisTicks","axisBorder","type","categories","Date","time_close","toISOString","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","x","time_open","open","high","low"],"sources":["/home/onemorebottlee/Desktop/nomadCoder/coinChecker/src/routes/Chart.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport Apexchart from \"react-apexcharts\"\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\ninterface IHistoricalData {\n    time_open: number;\n    time_close: number;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    volume: number;\n    market_cap: number;\n}\ninterface ChartProps {\n    coinId: string;\n}\ninterface ICandleChartItem {\n    x: Date,\n    y: number[];\n}\nfunction Chart({ coinId }: ChartProps) {\n    const isDark = useRecoilValue(isDarkAtom);\n    const { isLoading, data } = useQuery<IHistoricalData[]>([\"ohlcv\", coinId], () => fetchCoinHistory(coinId))\n    return (\n        <div>{isLoading ? \"Loading...\" :\n            <>\n                <Apexchart\n                    type=\"line\"\n                    series={[\n                        {\n                            name: \"price\",\n                            data: data?.map((price => price.close)) ?? [],\n                        },\n                    ]}\n                    options={{\n                        theme: {\n                            mode: isDark ? \"dark\" : \"light\",\n                        },\n                        chart: {\n                            height: 300,\n                            width: 500,\n                            toolbar: {\n                                show: false\n                            },\n                            background: \"#2c3e50\"\n                        },\n                        stroke: {\n                            curve: \"smooth\",\n                            width: 5,\n                        },\n                        yaxis: {\n                            show: false\n                        },\n                        xaxis: {\n                            labels: { show: false },\n                            axisTicks: { show: false },\n                            axisBorder: { show: false },\n                            type: \"datetime\",\n                            categories: data?.map((price) => new Date(price.time_close * 1000).toISOString()),\n                        },\n                        fill: { type: \"gradient\", gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] } },\n                        colors: [\"#0fbcf9\"],\n                        tooltip: {\n                            y: { formatter: (value) => `$ ${value.toFixed(2)}` },\n                        },\n                    }} />\n\n                <Apexchart\n                    type=\"candlestick\"\n                    series={[\n                        {\n                            name: \"price\",\n                            data: data?.map((price) => {\n                                return {\n                                    x: new Date(price.time_open * 1000),\n                                    y: [\n                                        price.open,\n                                        price.high,\n                                        price.low,\n                                        price.close,\n                                    ],\n                                };\n                            }\n                            ) as ICandleChartItem[],\n                        },\n                    ]}\n                    options={{\n                        theme: {\n                            mode: isDark ? \"dark\" : \"light\",\n                        },\n                        chart: {\n                            height: 300,\n                            width: 500,\n                            toolbar: {\n                                show: false\n                            },\n                            background: \"#2c3e50\"\n                        },\n                        stroke: {\n                            curve: \"smooth\",\n                            width: 5,\n                        },\n                        yaxis: {\n                            show: false\n                        },\n                        xaxis: {\n                            labels: { show: false },\n                            axisTicks: { show: false },\n                            axisBorder: { show: false },\n                            type: \"datetime\",\n                            categories: data?.map((price) => new Date(price.time_close * 1000).toISOString()),\n                        },\n                        colors: [\"#0fbcf9\"],\n                        \n                    }} />\n            </>\n        }\n        </div>\n    )\n}\n\nexport default Chart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}