{"ast":null,"code":"var _jsxFileName = \"/home/onemorebottlee/Desktop/nomadCoder/react-master/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport Apexchart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart(_ref) {\n  _s();\n\n  var _data$map;\n\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading...\" : /*#__PURE__*/_jsxDEV(Apexchart, {\n      type: \"line\",\n      series: [{\n        name: \"price\",\n        data: (_data$map = data === null || data === void 0 ? void 0 : data.map(price => price.close)) !== null && _data$map !== void 0 ? _data$map : []\n      }],\n      options: {\n        theme: {\n          mode: \"dark\"\n        },\n        chart: {\n          height: 300,\n          width: 500,\n          toolbar: {\n            show: false\n          },\n          background: \"#2c3e50\"\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 5\n        },\n        yaxis: {\n          show: false\n        },\n        xaxis: {\n          labels: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          axisBorder: {\n            show: false\n          }\n        },\n        fill: {\n          type: \"gradient\",\n          gradient: {\n            gradientToColors: [\"blue\"],\n            stops: [0, 80]\n          }\n        },\n        colors: [\"red\"]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","Apexchart","Chart","coinId","isLoading","data","name","map","price","close","theme","mode","chart","height","width","toolbar","show","background","stroke","curve","yaxis","xaxis","labels","axisTicks","axisBorder","fill","type","gradient","gradientToColors","stops","colors"],"sources":["/home/onemorebottlee/Desktop/nomadCoder/react-master/src/routes/Chart.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport Apexchart from \"react-apexcharts\"\n\ninterface IHistoricalData {\n    time_open: string;\n    time_close: string;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    volume: number;\n    market_cap: number;\n}\ninterface ChartProps {\n    coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n    const { isLoading, data } = useQuery<IHistoricalData[]>([\"ohlcv\", coinId], () => fetchCoinHistory(coinId))\n    return (\n        <div>{isLoading ? \"Loading...\" :\n            <Apexchart\n                type=\"line\"\n                series={[\n                    {\n                        name: \"price\",\n                        data: data?.map((price => price.close)) ?? [],\n                    },\n                ]}\n                options={{\n                    theme: {\n                        mode: \"dark\",\n                    },\n                    chart: {\n                        height: 300,\n                        width: 500,\n                        toolbar: {\n                            show: false\n                        },\n                        background: \"#2c3e50\"\n                    },\n                    stroke: {\n                        curve: \"smooth\",\n                        width: 5,\n                    },\n                    yaxis: {\n                        show: false\n                    },\n                    xaxis: {\n                        labels: {show: false},\n                        axisTicks:{show:false},\n                        axisBorder:{show:false}\n                    },\n                    fill:{ type:\"gradient\", gradient:   { gradientToColors:[\"blue\"], stops: [0,80]}},\n                    colors: [\"red\"]\n                }} />}\n        </div>\n    )\n}\n\nexport default Chart;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,QAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;;AAeA,SAASC,KAAT,OAAuC;EAAA;;EAAA;;EAAA,IAAxB;IAAEC;EAAF,CAAwB;EACnC,MAAM;IAAEC,SAAF;IAAaC;EAAb,IAAsBN,QAAQ,CAAoB,CAAC,OAAD,EAAUI,MAAV,CAApB,EAAuC,MAAMH,gBAAgB,CAACG,MAAD,CAA7D,CAApC;EACA,oBACI;IAAA,UAAMC,SAAS,GAAG,YAAH,gBACX,QAAC,SAAD;MACI,IAAI,EAAC,MADT;MAEI,MAAM,EAAE,CACJ;QACIE,IAAI,EAAE,OADV;QAEID,IAAI,eAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE,GAAN,CAAWC,KAAK,IAAIA,KAAK,CAACC,KAA1B,CAAF,iDAAuC;MAF/C,CADI,CAFZ;MAQI,OAAO,EAAE;QACLC,KAAK,EAAE;UACHC,IAAI,EAAE;QADH,CADF;QAILC,KAAK,EAAE;UACHC,MAAM,EAAE,GADL;UAEHC,KAAK,EAAE,GAFJ;UAGHC,OAAO,EAAE;YACLC,IAAI,EAAE;UADD,CAHN;UAMHC,UAAU,EAAE;QANT,CAJF;QAYLC,MAAM,EAAE;UACJC,KAAK,EAAE,QADH;UAEJL,KAAK,EAAE;QAFH,CAZH;QAgBLM,KAAK,EAAE;UACHJ,IAAI,EAAE;QADH,CAhBF;QAmBLK,KAAK,EAAE;UACHC,MAAM,EAAE;YAACN,IAAI,EAAE;UAAP,CADL;UAEHO,SAAS,EAAC;YAACP,IAAI,EAAC;UAAN,CAFP;UAGHQ,UAAU,EAAC;YAACR,IAAI,EAAC;UAAN;QAHR,CAnBF;QAwBLS,IAAI,EAAC;UAAEC,IAAI,EAAC,UAAP;UAAmBC,QAAQ,EAAI;YAAEC,gBAAgB,EAAC,CAAC,MAAD,CAAnB;YAA6BC,KAAK,EAAE,CAAC,CAAD,EAAG,EAAH;UAApC;QAA/B,CAxBA;QAyBLC,MAAM,EAAE,CAAC,KAAD;MAzBH;IARb;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAuCH;;GAzCQ5B,K;UACuBH,Q;;;KADvBG,K;AA2CT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}