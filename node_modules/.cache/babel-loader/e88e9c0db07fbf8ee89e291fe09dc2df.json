{"ast":null,"code":"var _jsxFileName = \"/home/onemorebottlee/Desktop/nomadCoder/react-master/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport Apexchart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Chart(_ref) {\n  _s();\n\n  var _data$map;\n\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  const mappedOhlcvData = data === null || data === void 0 ? void 0 : data.map(data => ({\n    x: data.time_open,\n    y: [data.open.toFixed(2), data.high.toFixed(2), data.low.toFixed(2), data.close.toFixed(2)]\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading...\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Apexchart, {\n        type: \"line\",\n        series: [{\n          name: \"price\",\n          data: (_data$map = data === null || data === void 0 ? void 0 : data.map(price => price.close)) !== null && _data$map !== void 0 ? _data$map : []\n        }],\n        options: {\n          theme: {\n            mode: \"dark\"\n          },\n          chart: {\n            height: 300,\n            width: 500,\n            toolbar: {\n              show: false\n            },\n            background: \"#2c3e50\"\n          },\n          stroke: {\n            curve: \"smooth\",\n            width: 5\n          },\n          yaxis: {\n            show: false\n          },\n          xaxis: {\n            labels: {\n              show: false\n            },\n            axisTicks: {\n              show: false\n            },\n            axisBorder: {\n              show: false\n            },\n            type: \"datetime\",\n            categories: data === null || data === void 0 ? void 0 : data.map(price => new Date(price.time_close * 1000).toISOString())\n          },\n          fill: {\n            type: \"gradient\",\n            gradient: {\n              gradientToColors: [\"#0be881\"],\n              stops: [0, 100]\n            }\n          },\n          colors: [\"#0fbcf9\"],\n          tooltip: {\n            y: {\n              formatter: value => `$ ${value.toFixed(2)}`\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Apexchart, {\n        type: \"candlestick\",\n        series: [{\n          data: mappedOhlcvData\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","Apexchart","Chart","coinId","isLoading","data","mappedOhlcvData","map","x","time_open","y","open","toFixed","high","low","close","name","price","theme","mode","chart","height","width","toolbar","show","background","stroke","curve","yaxis","xaxis","labels","axisTicks","axisBorder","type","categories","Date","time_close","toISOString","fill","gradient","gradientToColors","stops","colors","tooltip","formatter","value"],"sources":["/home/onemorebottlee/Desktop/nomadCoder/react-master/src/routes/Chart.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport Apexchart from \"react-apexcharts\"\n\ninterface IHistoricalData {\n    time_open: string;\n    time_close: number;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    volume: number;\n    market_cap: number;\n}\ninterface ChartProps {\n    coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n    const { isLoading, data } = useQuery<IHistoricalData[]>([\"ohlcv\", coinId], () => fetchCoinHistory(coinId))\n    const mappedOhlcvData = data?.map((data: IHistoricalData) => ({\n        x: data.time_open,\n        y: [data.open.toFixed(2), data.high.toFixed(2), data.low.toFixed(2), data.close.toFixed(2)],\n        }));\n    return (\n        <div>{isLoading ? \"Loading...\" :\n            <>\n            <Apexchart\n                type = \"line\"\n                series={[\n                    {\n                        name: \"price\",\n                        data: data?.map((price => price.close)) ?? [],\n                    },\n                ]}\n                options={{\n                    theme: {\n                        mode: \"dark\",\n                    },\n                    chart: {\n                        height: 300,\n                        width: 500,\n                        toolbar: {\n                            show: false\n                        },\n                        background: \"#2c3e50\"\n                    },\n                    stroke: {\n                        curve: \"smooth\",\n                        width: 5,\n                    },\n                    yaxis: {\n                        show: false\n                    },\n                    xaxis: {\n                        labels: { show: false },\n                        axisTicks: { show: false },\n                        axisBorder: { show: false },\n                        type: \"datetime\",\n                        categories: data?.map((price) => new Date(price.time_close * 1000).toISOString()),\n                    },\n                    fill: { type: \"gradient\", gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] } },\n                    colors: [\"#0fbcf9\"],\n                    tooltip: {\n                        y: {formatter: (value) => `$ ${value.toFixed(2)}`},\n                    },\n                }} />\n                <Apexchart\n                type=\"candlestick\"\n                series={[{ data: mappedOhlcvData }] as unknown as number[]}\n                \n                />\n                </>\n                }\n        </div>\n    )\n}\n\nexport default Chart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}