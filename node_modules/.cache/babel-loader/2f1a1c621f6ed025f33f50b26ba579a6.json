{"ast":null,"code":"var _jsxFileName = \"/home/onemorebottlee/Desktop/nomadCoder/react-master/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport Apexchart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Chart(_ref) {\n  _s();\n\n  var _data$map;\n\n  let {\n    coinId\n  } = _ref;\n  // const isDark = useRecoilValue(isDarkAtom);\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading...\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Apexchart, {\n        type: \"line\",\n        series: [{\n          name: \"price\",\n          data: (_data$map = data === null || data === void 0 ? void 0 : data.map(price => price.close)) !== null && _data$map !== void 0 ? _data$map : []\n        }],\n        options: {\n          theme: {\n            mode: \"dark\"\n          },\n          chart: {\n            height: 300,\n            width: 500,\n            toolbar: {\n              show: false\n            },\n            background: \"#2c3e50\"\n          },\n          stroke: {\n            curve: \"smooth\",\n            width: 5\n          },\n          yaxis: {\n            show: false\n          },\n          xaxis: {\n            labels: {\n              show: false\n            },\n            axisTicks: {\n              show: false\n            },\n            axisBorder: {\n              show: false\n            },\n            type: \"datetime\",\n            categories: data === null || data === void 0 ? void 0 : data.map(price => new Date(price.time_close * 1000).toISOString())\n          },\n          fill: {\n            type: \"gradient\",\n            gradient: {\n              gradientToColors: [\"#0be881\"],\n              stops: [0, 100]\n            }\n          },\n          colors: [\"#0fbcf9\"],\n          tooltip: {\n            y: {\n              formatter: value => `$ ${value.toFixed(2)}`\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Apexchart, {\n        type: \"candlestick\",\n        series: [{\n          name: \"price\",\n          data: data === null || data === void 0 ? void 0 : data.map(price => {\n            return {\n              x: new Date(price.time_open * 1000),\n              y: [price.open, price.high, price.low, price.close]\n            };\n          })\n        }],\n        options: {\n          theme: {\n            mode: isDark ? \"dark\" : \"light\"\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","Apexchart","Chart","coinId","isLoading","data","name","map","price","close","theme","mode","chart","height","width","toolbar","show","background","stroke","curve","yaxis","xaxis","labels","axisTicks","axisBorder","type","categories","Date","time_close","toISOString","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","x","time_open","open","high","low","isDark"],"sources":["/home/onemorebottlee/Desktop/nomadCoder/react-master/src/routes/Chart.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport Apexchart from \"react-apexcharts\"\n\ninterface IHistoricalData {\n    time_open: number;\n    time_close: number;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    volume: number;\n    market_cap: number;\n}\ninterface ChartProps {\n    coinId: string;\n}\ninterface ICandleChartItem {\n    x: Date,\n    y: number[];\n}\nfunction Chart({ coinId }: ChartProps) {\n    // const isDark = useRecoilValue(isDarkAtom);\n    const { isLoading, data } = useQuery<IHistoricalData[]>([\"ohlcv\", coinId], () => fetchCoinHistory(coinId))\n    return (\n        <div>{isLoading ? \"Loading...\" :\n            <>\n                <Apexchart\n                    type=\"line\"\n                    series={[\n                        {\n                            name: \"price\",\n                            data: data?.map((price => price.close)) ?? [],\n                        },\n                    ]}\n                    options={{\n                        theme: {\n                            mode: \"dark\",\n                        },\n                        chart: {\n                            height: 300,\n                            width: 500,\n                            toolbar: {\n                                show: false\n                            },\n                            background: \"#2c3e50\"\n                        },\n                        stroke: {\n                            curve: \"smooth\",\n                            width: 5,\n                        },\n                        yaxis: {\n                            show: false\n                        },\n                        xaxis: {\n                            labels: { show: false },\n                            axisTicks: { show: false },\n                            axisBorder: { show: false },\n                            type: \"datetime\",\n                            categories: data?.map((price) => new Date(price.time_close * 1000).toISOString()),\n                        },\n                        fill: { type: \"gradient\", gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] } },\n                        colors: [\"#0fbcf9\"],\n                        tooltip: {\n                            y: { formatter: (value) => `$ ${value.toFixed(2)}` },\n                        },\n                    }} />\n\n                <Apexchart\n                    type=\"candlestick\"\n                    series={[\n                        {\n                            name: \"price\",\n                            data: data?.map((price) => {\n                                return {\n                                    x: new Date(price.time_open * 1000),\n                                    y: [\n                                        price.open,\n                                        price.high,\n                                        price.low,\n                                        price.close,\n                                    ],\n                                };\n                            }\n                            ) as ICandleChartItem[],\n                        },\n                    ]}\n                    options={{\n                        theme: {\n                            mode: isDark ? \"dark\" : \"light\",\n                        }\n                    }}\n                    \n                />\n            </>\n        }\n        </div>\n    )\n}\n\nexport default Chart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}